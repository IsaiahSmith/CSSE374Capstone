digraph G {
	fontname = "Bitstream Vera Sans" 
	fontsize = 8 
	node [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8 
		shape = "record"
	] 
	edge [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8
	]
	ClassBuilder [ 
		label = "{ClassBuilder|public name : String\lpublic superName : String\lpublic isClass : boolean\lpublic inter : List\lpublic fields : List\lpublic methods : List\l | <init>) : voidtoString) : java.lang.String\l}" 
	]
	ClassDeclarationVisitor [ 
		label = "{ClassDeclarationVisitor|private cls : ClassBuilder\l | <init>arg0: int) : void<init>arg0: int, arg1: project.ClassBuilder) : voidvisitarg0: int, arg1: int, arg2: java.lang.String, arg3: java.lang.String, arg4: java.lang.String, arg5: java.lang.String[]) : void\l}" 
	]
	ClassFieldVisitor [ 
		label = "{ClassFieldVisitor|private cls : ClassBuilder\lprivate newField : Map\l | <init>arg0: int) : void<init>arg0: int, arg1: org.objectweb.asm.ClassVisitor) : void<init>arg0: int, arg1: org.objectweb.asm.ClassVisitor, arg2: project.ClassBuilder) : voidvisitFieldarg0: int, arg1: java.lang.String, arg2: java.lang.String, arg3: java.lang.String, arg4: java.lang.Object) : org.objectweb.asm.FieldVisitoraddAccessLevelarg0: int) : voidaddTypearg0: java.lang.String) : void\l}" 
	]
	ClassMethodVisitor [ 
		label = "{ClassMethodVisitor|private cls : ClassBuilder\lprivate newMethod : Map\l | <init>arg0: int) : void<init>arg0: int, arg1: org.objectweb.asm.ClassVisitor) : void<init>arg0: int, arg1: org.objectweb.asm.ClassVisitor, arg2: project.ClassBuilder) : voidvisitMethodarg0: int, arg1: java.lang.String, arg2: java.lang.String, arg3: java.lang.String, arg4: java.lang.String[]) : org.objectweb.asm.MethodVisitoraddArgumentsarg0: java.lang.String) : voidaddReturnTypearg0: java.lang.String) : voidaddAccessLevelarg0: int) : void\l}" 
	]
	DesignBuilder [ 
		label = "{DesignBuilder| | <init>) : voidparsearg0: java.lang.String[]) : java.util.List\l}" 
	]
	main [ 
		label = "{main| | <init>) : voidmainarg0: java.lang.String[]) : void\l}" 
	]
	List [ 
		label = "{interface\lList| | size) : intisEmpty) : booleancontainsarg0: java.lang.Object) : booleaniterator) : java.util.IteratortoArray) : java.lang.Object[]toArrayarg0: java.lang.Object[]) : java.lang.Object[]addarg0: java.lang.Object) : booleanremovearg0: java.lang.Object) : booleancontainsAllarg0: java.util.Collection) : booleanaddAllarg0: java.util.Collection) : booleanaddAllarg0: int, arg1: java.util.Collection) : booleanremoveAllarg0: java.util.Collection) : booleanretainAllarg0: java.util.Collection) : booleanreplaceAllarg0: java.util.function.UnaryOperator) : voidsortarg0: java.util.Comparator) : voidclear) : voidequalsarg0: java.lang.Object) : booleanhashCode) : intgetarg0: int) : java.lang.Objectsetarg0: int, arg1: java.lang.Object) : java.lang.Objectaddarg0: int, arg1: java.lang.Object) : voidremovearg0: int) : java.lang.ObjectindexOfarg0: java.lang.Object) : intlastIndexOfarg0: java.lang.Object) : intlistIterator) : java.util.ListIteratorlistIteratorarg0: int) : java.util.ListIteratorsubListarg0: int, arg1: int) : java.util.Listspliterator) : java.util.Spliterator\l}" 
	]
	edge [ arrowhead = 'empty' style= 'dashed']java/util/List->java/util/Collection\ledge [ arrowhead = 'empty'] project/ClassBuilder -> java/lang/Object project/ClassDeclarationVisitor -> org/objectweb/asm/ClassVisitor project/ClassFieldVisitor -> org/objectweb/asm/ClassVisitor project/ClassMethodVisitor -> org/objectweb/asm/ClassVisitor project/DesignBuilder -> java/lang/Object project/main -> java/lang/Object java/util/List -> java/lang/Object