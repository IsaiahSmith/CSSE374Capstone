digraph G {
	fontname = "Bitstream Vera Sans" 
	fontsize = 8 
	node [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8 
		shape = "record"
	] 
	edge [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8
	]
	problem_AppLauncher [ 
		label = "{AppLauncher|private watcher : WatchService\lprivate dir : Path\lprivate stop : boolean\lprivate processes : List\ldefault fileMap : Map\ldefault fileType : FileType\l|public ru) : void\lprotected clearEverythin) : void\lpublic stopGracefull) : void\lpublic isRunnin) : boolean\lpublic getApplicationsCoun) : int\lpublic handleDirectoryEvent(String arg0, Path arg1) : void\lpublic main(String[] arg0) : void\l\l}" 
	]
	problem_FileType [ 
		label = "{\<\<interface\>\>\lFileType||public getComman) : String\l\l}" 
	]
	problem_HTMLFile [ 
		label = "{HTMLFile||public getComman) : String\l\l}" 
	]
	problem_TextFile [ 
		label = "{TextFile||public getComman) : String\l\l}" 
	]
	problem_WordFile [ 
		label = "{WordFile||public getComman) : String\l\l}" 
	]
	problem_Nothing [ 
		label = "{Nothing|private nobody : String\l|\l}" 
	]
	problem_HTMLFile->problem_FileType [arrowhead="empty" style = "dashed"]
	problem_TextFile->problem_FileType [arrowhead="empty" style = "dashed"]
	problem_WordFile->problem_FileType [arrowhead="empty" style = "dashed"]
	 problem_AppLauncher -> problem_HTMLFile [arrowhead="vee" style = "dashed" splines="compound"]
	 problem_AppLauncher -> problem_FileType [arrowhead="vee" style = "dashed" splines="compound"]
	 problem_AppLauncher -> problem_WordFile [arrowhead="vee" style = "dashed" splines="compound"]
	 problem_AppLauncher -> problem_TextFile [arrowhead="vee" style = "dashed" splines="compound"]
	 problem_AppLauncher -> problem_AppLauncher [arrowhead="vee" style = "dashed" splines="compound"]
	 problem_AppLauncher -> problem_FileType [arrowhead="vee" style = "filled" ]
	
}