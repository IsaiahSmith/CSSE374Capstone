digraph G {
	fontname = "Bitstream Vera Sans" 
	fontsize = 8 
	node [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8 
		shape = "record"
	] 
	edge [
		fontname = "Bitstream Vera Sans" 
		fontsize = 8
	]
	ClassBuilder [ 
		label = "{ClassBuilder|public name : String\lpublic superName : String\lpublic isClass : boolean\lpublic inter : List\lpublic fields : List\lpublic methods : List\l |  toString() : java.lang.String\l\l}" 
	]
	ClassDeclarationVisitor [ 
		label = "{ClassDeclarationVisitor|private cls : ClassBuilder\l |  visit(arg0: int, arg1: int, arg2: String, arg3: String, arg4: String, arg5: String[]) : void\l\l}" 
	]
	ClassFieldVisitor [ 
		label = "{ClassFieldVisitor|private cls : ClassBuilder\lprivate newField : Map\l |  visitField(arg0: int, arg1: String, arg2: String, arg3: String, arg4: Object) : org.objectweb.asm.FieldVisitor\l addAccessLevel(arg0: int) : void\l addType(arg0: String) : void\l\l}" 
	]
	ClassMethodVisitor [ 
		label = "{ClassMethodVisitor|private cls : ClassBuilder\lprivate newMethod : Map\l |  visitMethod(arg0: int, arg1: String, arg2: String, arg3: String, arg4: String[]) : org.objectweb.asm.MethodVisitor\l addArguments(arg0: String) : void\l addReturnType(arg0: String) : void\l addAccessLevel(arg0: int) : void\l\l}" 
	]
	DesignBuilder [ 
		label = "{DesignBuilder| |  parse(arg0: String[]) : java.util.List\l\l}" 
	]
	main [ 
		label = "{main| |  main(arg0: String[]) : void\l\l}" 
	]
	List [ 
		label = "{interface\lList| |  size() : int\l isEmpty() : boolean\l contains(arg0: Object) : boolean\l iterator() : java.util.Iterator\l toArray() : java.lang.Object[]\l toArray(arg0: Object[]) : java.lang.Object[]\l add(arg0: Object) : boolean\l remove(arg0: Object) : boolean\l containsAll(arg0: Collection) : boolean\l addAll(arg0: Collection) : boolean\l addAll(arg0: int, arg1: Collection) : boolean\l removeAll(arg0: Collection) : boolean\l retainAll(arg0: Collection) : boolean\l replaceAll(arg0: UnaryOperator) : void\l sort(arg0: Comparator) : void\l clear() : void\l equals(arg0: Object) : boolean\l hashCode() : int\l get(arg0: int) : java.lang.Object\l set(arg0: int, arg1: Object) : java.lang.Object\l add(arg0: int, arg1: Object) : void\l remove(arg0: int) : java.lang.Object\l indexOf(arg0: Object) : int\l lastIndexOf(arg0: Object) : int\l listIterator() : java.util.ListIterator\l listIterator(arg0: int) : java.util.ListIterator\l subList(arg0: int, arg1: int) : java.util.List\l spliterator() : java.util.Spliterator\l\l}" 
	]
	
}